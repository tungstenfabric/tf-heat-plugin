heat_template_version: 2014-10-16

description: HOT to create sub-interfaces on a server instance using Contrail V2 plugin

parameters:
  private_net_name_0:
    type: string
  private_net_cidr_0:
    type: string
  private_net_gateway_0:
    type: string
  private_net_name_1:
    type: string
  private_net_cidr_1:
    type: string
  private_net_gateway_1:
    type: string
  vlan_tag_1:
    type: number
  VMI_name_1:
    type: string
  VMI_name_2:
    type: string
  server_left_name:
    type: string
  server_right_name:
    type: string
  image:
    type: string
  flavor:
    type: string

resources:
  private_net_0:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name_0 }

  private_subnet_0:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net_0 }
      cidr: { get_param: private_net_cidr_0 }
      gateway_ip: { get_param: private_net_gateway_0 }

  server_1:
    type: OS::Nova::Server
    properties:
      name: { get_param: server_left_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - network: { get_resource: private_net_0 }

  server_2:
    type: OS::Nova::Server
    properties:
      name: { get_param: server_right_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - network: { get_resource: private_net_0 }

  private_net_1:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name_1 }

  private_subnet_1:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net_1 }
      cidr: { get_param: private_net_cidr_1 }
      gateway_ip: { get_param: private_net_gateway_1 }

  template_VirtualMachineInterface_1:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      name: { get_param: VMI_name_1 }
      virtual_network_refs: [{ get_resource: private_net_1 }]
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_sub_interface_vlan_tag: { get_param: vlan_tag_1 },
        }
      virtual_machine_interface_mac_addresses:
        {
          virtual_machine_interface_mac_addresses_mac_address: [{ get_attr: [server_1, addresses, get_param: private_net_name_0, 0, "OS-EXT-IPS-MAC:mac_addr"] }],
        }
      virtual_machine_interface_refs: [{ get_attr: [server_1, addresses, get_param: private_net_name_0, 0, "port"] }]

  template_VirtualMachineInterface_2:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      name: { get_param: VMI_name_2 }
      virtual_network_refs: [{ get_resource: private_net_1 }]
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_sub_interface_vlan_tag: { get_param: vlan_tag_1 },
        }
      virtual_machine_interface_mac_addresses:
        {
        virtual_machine_interface_mac_addresses_mac_address: [{ get_attr: [server_2, addresses, get_param: private_net_name_0, 0, "OS-EXT-IPS-MAC:mac_addr"] }]
        }
      virtual_machine_interface_refs: [{ get_attr: [server_2, addresses, get_param: private_net_name_0, 0, "port"] }]

  instanceIP_1_1:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_1 ]
    properties:
      virtual_network_refs: [{ get_resource: private_net_1 }]
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_1 }]

  instanceIP_1_2:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_2 ]
    properties:
      virtual_network_refs: [{ get_resource: private_net_1 }]
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_2 }]

outputs:
  server_1_mac:
    description: Server_1 Mac-Address
    value: { get_attr: [server_1, addresses, get_param: private_net_name_0, 0, "OS-EXT-IPS-MAC:mac_addr"] }
  server_1_port_uuid:
    description: Server_1 port UUID
    value: { get_attr: [server_1, addresses, get_param: private_net_name_0, 0, "port"] }
  server_2_mac:
    description: Server_2 Mac-Address
    value: { get_attr: [server_2, addresses, get_param: private_net_name_0, 0, "OS-EXT-IPS-MAC:mac_addr"] }
  server_2_port_uuid:
    description: Server_2 port UUID
    value: { get_attr: [server_2, addresses, get_param: private_net_name_0, 0, "port"] }
