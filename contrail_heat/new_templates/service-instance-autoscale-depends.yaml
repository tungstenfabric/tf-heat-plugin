heat_template_version: 2015-04-30

description: Autoscaling Contrail Cloud HOT

parameters:
  virtual_network_1:
    type: string
    description: mgmt_virtual_network for the ServiceInstance
  virtual_network_1_fqdn:
    type: string
    description: mgmt_virtual_network for the ServiceInstance
  virtual_network_2:
    type: string
    description: left_virtual_network for the ServiceInstance
  virtual_network_2_fqdn:
    type: string
    description: mgmt_virtual_network for the ServiceInstance
  virtual_network_3:
    type: string
    description: right_virtual_network for the ServiceInstance
  virtual_network_3_fqdn:
    type: string
    description: mgmt_virtual_network for the ServiceInstance
  image:
    type: string
    description: Name of the image
  flavor:
    type: string
    description: Flavor
  service_instance_name:
    type: string
    label: Service instance fq name
    description: Service instance for port tuple
  service_interface_type_1:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_interface_type_2:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_interface_type_3:
    type: string
    description: service_interface_type for the ServiceTemplate
  port_tuple_name:
    type: string
    description: name of Port Tuple

resources:
  template_PortTuple:
    type: OS::ContrailV2::PortTuple
    properties:
      name: { get_param: port_tuple_name }
      service_instance: { get_param: service_instance_name }

  template_VirtualMachineInterface_1:
    type: OS::ContrailV2::VirtualMachineInterface
    depends_on: [ template_PortTuple ]
    properties:
      name: { get_param: virtual_network_1 }
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_service_interface_type: { get_param: service_interface_type_1 },
        }
      port_tuple_refs: [{ get_resource: template_PortTuple }]
      virtual_network_refs: [{ get_param: virtual_network_1_fqdn }]

  template_VirtualMachineInterface_2:
    type: OS::ContrailV2::VirtualMachineInterface
    depends_on: [ template_PortTuple ]
    properties:
      name: { get_param: virtual_network_2 }
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_service_interface_type: { get_param: service_interface_type_2 },
        }
      port_tuple_refs: [{ get_resource: template_PortTuple }]
      virtual_network_refs: [{ get_param: virtual_network_2_fqdn }]

  template_VirtualMachineInterface_3:
    type: OS::ContrailV2::VirtualMachineInterface
    depends_on: [ template_PortTuple ]
    properties:
      name: { get_param: virtual_network_3 }
      virtual_machine_interface_properties:
        {
          virtual_machine_interface_properties_service_interface_type: { get_param: service_interface_type_3 },
        }
      port_tuple_refs: [{ get_resource: template_PortTuple }]
      virtual_network_refs: [{ get_param: virtual_network_3_fqdn }]

  template_InstanceIp_1:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_1 ]
    properties:
      name: { get_param: virtual_network_1 }
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_1 }]
      virtual_network_refs: [{ get_param: virtual_network_1_fqdn }]

  template_InstanceIp_2:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_2 ]
    properties:
      name: { get_param: virtual_network_2 }
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_2 }]
      virtual_network_refs: [{ get_param: virtual_network_2_fqdn }]

  template_InstanceIp_3:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ template_VirtualMachineInterface_3 ]
    properties:
      name: { get_param: virtual_network_3 }
      virtual_machine_interface_refs: [{ get_resource: template_VirtualMachineInterface_3 }]
      virtual_network_refs: [{ get_param: virtual_network_3_fqdn }]

  instance:
    type: OS::Nova::Server
    depends_on: [ template_InstanceIp_1, template_InstanceIp_2, template_InstanceIp_3 ]
    properties:
      name:
      image: { get_param:  image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: template_VirtualMachineInterface_1 }
        - port: { get_resource: template_VirtualMachineInterface_2 }
        - port: { get_resource: template_VirtualMachineInterface_3 }
